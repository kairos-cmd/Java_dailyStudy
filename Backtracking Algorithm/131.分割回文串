class Solution {
    List<List<String>> result = new ArrayList<>();
    LinkedList<String> temp = new LinkedList<>(); //用链表和双端队列都是可以的
    public List<List<String>> partition(String s) {
        backTracking(s, 0);
        return result;
    }
    public void backTracking(String s, int startIndex){
        if(startIndex >= s.length()){
            result.add(new ArrayList<>(temp));
            return;
        }
        for(int i=startIndex; i<s.length(); i++){
            if(isPalindrome(s, startIndex, i)){
                String str = s.substring(startIndex, i+1);
                temp.add(str);
            }else{
                continue;
            }
            backTracking(s, i+1);
            temp.removeLast();
        }
    }
    public boolean isPalindrome(String s, int startIndex, int end){
        for(int i=startIndex, j=end; i<j; i++, j--){
            if(s.charAt(i) != s.charAt(j)){
                return false;
            }
        }
        return true;
    }
}
